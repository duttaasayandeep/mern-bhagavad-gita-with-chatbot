{"ast":null,"code":"var _jsxFileName = \"C:\\\\fullstack-bhagavad-gita\\\\frontend\\\\src\\\\components\\\\AdminDashboard.js\",\n  _s = $RefreshSig$();\n// frontend/src/components/AdminDashboard.js\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst AdminDashboard = () => {\n  _s();\n  const [homeContent, setHomeContent] = useState({\n    youtubeUrl: '',\n    description: ''\n  });\n  const [videos, setVideos] = useState([]);\n  const [newVideo, setNewVideo] = useState({\n    youtubeUrl: '',\n    problemTitle: '',\n    solutionDescription: '',\n    bgImage: ''\n  });\n  const token = localStorage.getItem('token');\n  useEffect(() => {\n    fetchContent();\n  }, [token]);\n  const fetchContent = async () => {\n    try {\n      const {\n        data\n      } = await axios.get('/api/content');\n      if (data) {\n        setHomeContent(data.home || {});\n        setVideos(data.benefits && data.benefits.videos || []);\n      }\n    } catch (error) {\n      console.error('Error fetching content:', error.response ? error.response.data.message : error.message);\n    }\n  };\n  const updateHome = async () => {\n    try {\n      const {\n        data\n      } = await axios.put('/api/admin/content/home', homeContent, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setHomeContent(data.home);\n      alert('Home content updated!');\n    } catch (error) {\n      console.error('Error updating home content:', error.response ? error.response.data.message : error.message);\n    }\n  };\n  const addVideo = async () => {\n    if (videos.length >= 10) {\n      alert('Maximum of 10 videos allowed');\n      return;\n    }\n    try {\n      // Ensure youtubeUrl is explicitly set to empty string if not provided\n      const videoData = {\n        youtubeUrl: newVideo.youtubeUrl ? newVideo.youtubeUrl : \"\",\n        problemTitle: newVideo.problemTitle,\n        solutionDescription: newVideo.solutionDescription,\n        bgImage: newVideo.bgImage ? newVideo.bgImage : \"\"\n      };\n      const {\n        data\n      } = await axios.post('/api/admin/content/benefits/video', videoData, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setVideos(data);\n      setNewVideo({\n        youtubeUrl: '',\n        problemTitle: '',\n        solutionDescription: '',\n        bgImage: ''\n      });\n      alert('Video added!');\n    } catch (error) {\n      console.error('Error adding video:', error.response ? error.response.data.message : error.message);\n    }\n  };\n  const editVideo = async (videoId, updatedVideo) => {\n    try {\n      // Ensure youtubeUrl is explicitly set to empty string if not provided\n      const videoData = {\n        youtubeUrl: updatedVideo.youtubeUrl ? updatedVideo.youtubeUrl : \"\",\n        problemTitle: updatedVideo.problemTitle,\n        solutionDescription: updatedVideo.solutionDescription\n        // bgImage can be omitted or updated if needed\n      };\n      const {\n        data\n      } = await axios.put(`/api/admin/content/benefits/video/${videoId}`, videoData, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setVideos(videos.map(video => video._id === videoId ? data : video));\n      alert('Video updated!');\n    } catch (error) {\n      console.error('Error editing video:', error.response ? error.response.data.message : error.message);\n    }\n  };\n  const deleteVideo = async videoId => {\n    try {\n      await axios.delete(`/api/admin/content/benefits/video/${videoId}`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setVideos(videos.filter(video => video._id !== videoId));\n      alert('Video deleted!');\n    } catch (error) {\n      console.error('Error deleting video:', error.response ? error.response.data.message : error.message);\n    }\n  };\n\n  // For inline editing\n  const [editingVideoId, setEditingVideoId] = useState(null);\n  const [editingData, setEditingData] = useState({\n    youtubeUrl: '',\n    problemTitle: '',\n    solutionDescription: ''\n  });\n  const startEditing = video => {\n    setEditingVideoId(video._id);\n    setEditingData({\n      youtubeUrl: video.youtubeUrl,\n      problemTitle: video.problemTitle,\n      solutionDescription: video.solutionDescription\n    });\n  };\n  const cancelEditing = () => {\n    setEditingVideoId(null);\n    setEditingData({\n      youtubeUrl: '',\n      problemTitle: '',\n      solutionDescription: ''\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"admin-dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Admin Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"admin-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Home Content\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"YouTube URL\",\n        value: homeContent.youtubeUrl,\n        onChange: e => setHomeContent({\n          ...homeContent,\n          youtubeUrl: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"Description\",\n        value: homeContent.description,\n        onChange: e => setHomeContent({\n          ...homeContent,\n          description: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn\",\n        onClick: updateHome,\n        children: \"Update Home Content\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"admin-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Benefits Videos\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"add-video\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Add New Video\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"YouTube URL (Optional)\",\n          value: newVideo.youtubeUrl,\n          onChange: e => setNewVideo({\n            ...newVideo,\n            youtubeUrl: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Problem Statement Title\",\n          value: newVideo.problemTitle,\n          onChange: e => setNewVideo({\n            ...newVideo,\n            problemTitle: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          placeholder: \"Solution Description\",\n          value: newVideo.solutionDescription,\n          onChange: e => setNewVideo({\n            ...newVideo,\n            solutionDescription: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Background Image URL (Optional)\",\n          value: newVideo.bgImage,\n          onChange: e => setNewVideo({\n            ...newVideo,\n            bgImage: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn\",\n          onClick: addVideo,\n          children: \"Add Video\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"existing-videos\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Existing Videos\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 11\n        }, this), videos.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No videos available\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 13\n        }, this) : videos.map(video => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"video-card\",\n          children: editingVideoId === video._id ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: editingData.youtubeUrl,\n              onChange: e => setEditingData({\n                ...editingData,\n                youtubeUrl: e.target.value\n              }),\n              placeholder: \"YouTube URL (Optional)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: editingData.problemTitle,\n              onChange: e => setEditingData({\n                ...editingData,\n                problemTitle: e.target.value\n              }),\n              placeholder: \"Problem Statement Title\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              value: editingData.solutionDescription,\n              onChange: e => setEditingData({\n                ...editingData,\n                solutionDescription: e.target.value\n              }),\n              placeholder: \"Solution Description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn\",\n              onClick: () => {\n                editVideo(video._id, editingData);\n                setEditingVideoId(null);\n              },\n              children: \"Save\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn cancel\",\n              onClick: cancelEditing,\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"YouTube URL:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 198,\n                columnNumber: 24\n              }, this), \" \", video.youtubeUrl || 'N/A']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Problem Title:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 199,\n                columnNumber: 24\n              }, this), \" \", video.problemTitle]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Solution Description:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 200,\n                columnNumber: 24\n              }, this), \" \", video.solutionDescription]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn\",\n              onClick: () => startEditing(video),\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn delete\",\n              onClick: () => deleteVideo(video._id),\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true)\n        }, video._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 120,\n    columnNumber: 5\n  }, this);\n};\n_s(AdminDashboard, \"BCEPs//vEyKG6zd4AtH+IB8d4GE=\");\n_c = AdminDashboard;\nexport default AdminDashboard;\nvar _c;\n$RefreshReg$(_c, \"AdminDashboard\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","AdminDashboard","_s","homeContent","setHomeContent","youtubeUrl","description","videos","setVideos","newVideo","setNewVideo","problemTitle","solutionDescription","bgImage","token","localStorage","getItem","fetchContent","data","get","home","benefits","error","console","response","message","updateHome","put","headers","Authorization","alert","addVideo","length","videoData","post","editVideo","videoId","updatedVideo","map","video","_id","deleteVideo","delete","filter","editingVideoId","setEditingVideoId","editingData","setEditingData","startEditing","cancelEditing","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["C:/fullstack-bhagavad-gita/frontend/src/components/AdminDashboard.js"],"sourcesContent":["// frontend/src/components/AdminDashboard.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst AdminDashboard = () => {\r\n  const [homeContent, setHomeContent] = useState({ youtubeUrl: '', description: '' });\r\n  const [videos, setVideos] = useState([]);\r\n  const [newVideo, setNewVideo] = useState({ youtubeUrl: '', problemTitle: '', solutionDescription: '', bgImage: '' });\r\n  const token = localStorage.getItem('token');\r\n\r\n  useEffect(() => {\r\n    fetchContent();\r\n  }, [token]);\r\n\r\n  const fetchContent = async () => {\r\n    try {\r\n      const { data } = await axios.get('/api/content');\r\n      if (data) {\r\n        setHomeContent(data.home || {});\r\n        setVideos((data.benefits && data.benefits.videos) || []);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching content:', error.response ? error.response.data.message : error.message);\r\n    }\r\n  };\r\n\r\n  const updateHome = async () => {\r\n    try {\r\n      const { data } = await axios.put(\r\n        '/api/admin/content/home',\r\n        homeContent,\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      );\r\n      setHomeContent(data.home);\r\n      alert('Home content updated!');\r\n    } catch (error) {\r\n      console.error('Error updating home content:', error.response ? error.response.data.message : error.message);\r\n    }\r\n  };\r\n\r\n  const addVideo = async () => {\r\n    if (videos.length >= 10) {\r\n      alert('Maximum of 10 videos allowed');\r\n      return;\r\n    }\r\n    try {\r\n      // Ensure youtubeUrl is explicitly set to empty string if not provided\r\n      const videoData = {\r\n        youtubeUrl: newVideo.youtubeUrl ? newVideo.youtubeUrl : \"\",\r\n        problemTitle: newVideo.problemTitle,\r\n        solutionDescription: newVideo.solutionDescription,\r\n        bgImage: newVideo.bgImage ? newVideo.bgImage : \"\"\r\n      };\r\n      const { data } = await axios.post(\r\n        '/api/admin/content/benefits/video',\r\n        videoData,\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      );\r\n      setVideos(data);\r\n      setNewVideo({ youtubeUrl: '', problemTitle: '', solutionDescription: '', bgImage: '' });\r\n      alert('Video added!');\r\n    } catch (error) {\r\n      console.error('Error adding video:', error.response ? error.response.data.message : error.message);\r\n    }\r\n  };\r\n\r\n  const editVideo = async (videoId, updatedVideo) => {\r\n    try {\r\n      // Ensure youtubeUrl is explicitly set to empty string if not provided\r\n      const videoData = {\r\n        youtubeUrl: updatedVideo.youtubeUrl ? updatedVideo.youtubeUrl : \"\",\r\n        problemTitle: updatedVideo.problemTitle,\r\n        solutionDescription: updatedVideo.solutionDescription,\r\n        // bgImage can be omitted or updated if needed\r\n      };\r\n      const { data } = await axios.put(\r\n        `/api/admin/content/benefits/video/${videoId}`,\r\n        videoData,\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      );\r\n      setVideos(videos.map(video => video._id === videoId ? data : video));\r\n      alert('Video updated!');\r\n    } catch (error) {\r\n      console.error('Error editing video:', error.response ? error.response.data.message : error.message);\r\n    }\r\n  };\r\n\r\n  const deleteVideo = async (videoId) => {\r\n    try {\r\n      await axios.delete(\r\n        `/api/admin/content/benefits/video/${videoId}`,\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      );\r\n      setVideos(videos.filter(video => video._id !== videoId));\r\n      alert('Video deleted!');\r\n    } catch (error) {\r\n      console.error('Error deleting video:', error.response ? error.response.data.message : error.message);\r\n    }\r\n  };\r\n\r\n  // For inline editing\r\n  const [editingVideoId, setEditingVideoId] = useState(null);\r\n  const [editingData, setEditingData] = useState({ youtubeUrl: '', problemTitle: '', solutionDescription: '' });\r\n\r\n  const startEditing = (video) => {\r\n    setEditingVideoId(video._id);\r\n    setEditingData({ \r\n      youtubeUrl: video.youtubeUrl, \r\n      problemTitle: video.problemTitle, \r\n      solutionDescription: video.solutionDescription \r\n    });\r\n  };\r\n\r\n  const cancelEditing = () => {\r\n    setEditingVideoId(null);\r\n    setEditingData({ youtubeUrl: '', problemTitle: '', solutionDescription: '' });\r\n  };\r\n\r\n  return (\r\n    <div className=\"admin-dashboard\">\r\n      <h2>Admin Dashboard</h2>\r\n      <div className=\"admin-section\">\r\n        <h3>Home Content</h3>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"YouTube URL\"\r\n          value={homeContent.youtubeUrl}\r\n          onChange={(e) => setHomeContent({ ...homeContent, youtubeUrl: e.target.value })}\r\n        />\r\n        <textarea\r\n          placeholder=\"Description\"\r\n          value={homeContent.description}\r\n          onChange={(e) => setHomeContent({ ...homeContent, description: e.target.value })}\r\n        ></textarea>\r\n        <button className=\"btn\" onClick={updateHome}>Update Home Content</button>\r\n      </div>\r\n      <hr />\r\n      <div className=\"admin-section\">\r\n        <h3>Benefits Videos</h3>\r\n        <div className=\"add-video\">\r\n          <h4>Add New Video</h4>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"YouTube URL (Optional)\"\r\n            value={newVideo.youtubeUrl}\r\n            onChange={(e) => setNewVideo({ ...newVideo, youtubeUrl: e.target.value })}\r\n          />\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Problem Statement Title\"\r\n            value={newVideo.problemTitle}\r\n            onChange={(e) => setNewVideo({ ...newVideo, problemTitle: e.target.value })}\r\n          />\r\n          <textarea\r\n            placeholder=\"Solution Description\"\r\n            value={newVideo.solutionDescription}\r\n            onChange={(e) => setNewVideo({ ...newVideo, solutionDescription: e.target.value })}\r\n          ></textarea>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Background Image URL (Optional)\"\r\n            value={newVideo.bgImage}\r\n            onChange={(e) => setNewVideo({ ...newVideo, bgImage: e.target.value })}\r\n          />\r\n          <button className=\"btn\" onClick={addVideo}>Add Video</button>\r\n        </div>\r\n        <div className=\"existing-videos\">\r\n          <h4>Existing Videos</h4>\r\n          {videos.length === 0 ? (\r\n            <p>No videos available</p>\r\n          ) : (\r\n            videos.map((video) => (\r\n              <div key={video._id} className=\"video-card\">\r\n                {editingVideoId === video._id ? (\r\n                  <>\r\n                    <input\r\n                      type=\"text\"\r\n                      value={editingData.youtubeUrl}\r\n                      onChange={(e) => setEditingData({ ...editingData, youtubeUrl: e.target.value })}\r\n                      placeholder=\"YouTube URL (Optional)\"\r\n                    />\r\n                    <input\r\n                      type=\"text\"\r\n                      value={editingData.problemTitle}\r\n                      onChange={(e) => setEditingData({ ...editingData, problemTitle: e.target.value })}\r\n                      placeholder=\"Problem Statement Title\"\r\n                    />\r\n                    <textarea\r\n                      value={editingData.solutionDescription}\r\n                      onChange={(e) => setEditingData({ ...editingData, solutionDescription: e.target.value })}\r\n                      placeholder=\"Solution Description\"\r\n                    ></textarea>\r\n                    <button className=\"btn\" onClick={() => { editVideo(video._id, editingData); setEditingVideoId(null); }}>Save</button>\r\n                    <button className=\"btn cancel\" onClick={cancelEditing}>Cancel</button>\r\n                  </>\r\n                ) : (\r\n                  <>\r\n                    <p><strong>YouTube URL:</strong> {video.youtubeUrl || 'N/A'}</p>\r\n                    <p><strong>Problem Title:</strong> {video.problemTitle}</p>\r\n                    <p><strong>Solution Description:</strong> {video.solutionDescription}</p>\r\n                    <button className=\"btn\" onClick={() => startEditing(video)}>Edit</button>\r\n                    <button className=\"btn delete\" onClick={() => deleteVideo(video._id)}>Delete</button>\r\n                  </>\r\n                )}\r\n              </div>\r\n            ))\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminDashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}